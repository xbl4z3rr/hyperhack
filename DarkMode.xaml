<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:HyperHack">
    <Color x:Key="ValidationErrorColor">#f44336</Color>
    <SolidColorBrush x:Key="ValidationErrorBrush" Color="{StaticResource ValidationErrorColor}" />
    <SolidColorBrush x:Key="MaterialDesignBackground" Color="#FF000000" />
    <SolidColorBrush x:Key="MaterialDesignPaper" Color="#FF303030" />
    <SolidColorBrush x:Key="MaterialDesignCardBackground" Color="#FF424242" />
    <SolidColorBrush x:Key="MaterialDesignBody" Color="#DDFFFFFF" />
    <SolidColorBrush x:Key="MaterialDesignBodyLight" Color="#89FFFFFF" />
    <SolidColorBrush x:Key="MaterialDesignColumnHeader" Color="#BCFFFFFF" />
    <SolidColorBrush x:Key="MaterialDesignCheckBoxOff" Color="#89FFFFFF" />
    <SolidColorBrush x:Key="MaterialDesignCheckBoxDisabled" Color="#FF647076" />
    <SolidColorBrush x:Key="MaterialDesignTextBoxBorder" Color="#89FFFFFF" />
    <SolidColorBrush x:Key="MaterialDesignDivider" Color="#1FFFFFFF" />
    <SolidColorBrush x:Key="MaterialDesignSelection" Color="#757575" />
    <SolidColorBrush x:Key="MaterialDesignFlatButtonClick" Color="#19757575" />
    <SolidColorBrush x:Key="MaterialDesignFlatButtonRipple" Color="#FFB6B6B6" />
    <SolidColorBrush x:Key="MaterialDesignToolTipBackground" Color="#eeeeee" />
    <SolidColorBrush x:Key="MaterialDesignChipBackground" Color="#FF2E3C43" />
    <SolidColorBrush x:Key="MaterialDesignSnackbarBackground" Color="#FFCDCDCD" />
    <SolidColorBrush x:Key="MaterialDesignSnackbarMouseOver" Color="#FFB9B9BD" />
    <SolidColorBrush x:Key="MaterialDesignSnackbarRipple" Color="#FF494949" />
    <SolidColorBrush x:Key="defaultForeground" Color="Brown" />
    <Color x:Key="BackgroundColor">#FF252525</Color>
    <Color x:Key="LightBackgroundColor">#3B3B3B</Color>
    <Color x:Key="DefaultFontColor">#e4ebea</Color>
    <Color x:Key="GradientStartButtonColor">#D500F9</Color>
    <Color x:Key="GradientStopButtonColor">#FF5722</Color>
    <Color x:Key="HoverGradientStartButtonColor">#E040FB</Color>
    <Color x:Key="HoverGradientStopButtonColor">#FF7043</Color>
    <SolidColorBrush x:Key="DefaultBackground" Color="{StaticResource BackgroundColor}" />
    <SolidColorBrush x:Key="LightBackground" Color="{StaticResource LightBackgroundColor}" />
    <SolidColorBrush x:Key="FontColor" Color="{StaticResource DefaultFontColor}" />
    <SolidColorBrush x:Key="AnswerColor" Color="#AFB42B" />
    <SolidColorBrush x:Key="QuestionSearch" Color="#FFEA01" />
    <SolidColorBrush x:Key="SpecialQuestion" Color="#00BCD4" />
    <SolidColorBrush x:Key="SpecialQuestionSearch" Color="#FFEA00" />
    <SolidColorBrush x:Key="ButtonColor" Color="#1E88E5" />
    <SolidColorBrush x:Key="HoverButton" Color="#2499F7" />
    <SolidColorBrush x:Key="GradientStartButton" Color="#E040FB" />
    <SolidColorBrush x:Key="GradientStopButton" Color="#AD1457" />
    <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}" />
    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#e4ebea" />
    </Style>
    <Style x:Key="ButtonBase" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="#4589FF" />
        <Setter Property="Padding" Value="12,8,12,8" />
        <Setter Property="FontFamily" Value="Montserrat Regular" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="BtnBorder" Background="{TemplateBinding Background}" Padding="12,8,12,8" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Background" Value="#80aeff" />
                <Setter Property="Foreground" Value="#FFFFFFFF" />
                <Setter Property="Padding" Value="10,6,10,6" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Colorful" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0" StartPoint="0,1" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                    <GradientStop Offset="0.9" Color="{StaticResource GradientStartButtonColor}" />
                    <GradientStop Color="{StaticResource GradientStopButtonColor}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="BtnBorder" Background="{TemplateBinding Background}" Padding="12,8,12,8" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,1" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                            <GradientStop Offset="0.9" Color="{StaticResource HoverGradientStartButtonColor}" />
                            <GradientStop Color="{StaticResource HoverGradientStopButtonColor}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="10,6,10,6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#00FFFFFF" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="#00FFFFFF" BorderBrush="#666666" BorderThickness="2" Padding="10,6,10,6" CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TopTabButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="8,4,8,4" CornerRadius="5" Margin="5,5,5,5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ff4d4d" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TogglePressed" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="#00FFFFFF" BorderBrush="#FF4D4D" BorderThickness="1" Padding="6,2,6,2" CornerRadius="5" Margin="5,5,5,5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="#ff4d4d" BorderBrush="#FF4D4D" BorderThickness="1" Padding="6,2,6,2" CornerRadius="5" Margin="5,5,5,5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Normal" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource ButtonColor}" />
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverButton}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Montserrat Medium" />
        <Setter Property="Foreground" Value="{StaticResource FontColor}" />
        <Setter Property="Padding" Value="2" />
    </Style>
    <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Padding="4">
            <ScrollViewer Name="PART_ContentHost" Padding="0" VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Montserrat Regular" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="#00FFFFFF" />
                        <Border Name="Rectangle1" CornerRadius="5,0,0,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FrameworkElement.Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Border.CornerRadius" Value="0,0,5,5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="Foreground" Value="#5B5B5B" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border Name="BackgroundBorder" Background="{TemplateBinding Background}" CornerRadius="5,0,0,5">
                        <Grid Name="GridRoot" Width="19">
                            <Track Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="#5B5B5B" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="Thumb.IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="#6B6B6B" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="GridRoot" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BackgroundBorder" Property="Border.CornerRadius" Value="5,5,0,0" />
                            <Setter TargetName="PART_Track" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="FrameworkElement.Tag" Value="Horizontal" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Window" TargetType="{x:Type Border}">
        <Setter Property="Border.CornerRadius" Value="20,8,20,8" />
    </Style>
    <Style x:Key="TopTab" TargetType="{x:Type Border}">
        <Setter Property="Border.CornerRadius" Value="15" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="BorderBrush" Value="{StaticResource LightBackground}" />
    </Style>
</ResourceDictionary>